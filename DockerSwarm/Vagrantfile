# -*- mode: ruby -*-
# vi: set ft=ruby :

# $install_docker_script = <<SCRIPT
# echo "Installing dependencies ..."
# sudo apt-get update
# echo Installing Docker...
# curl -sSL https://get.docker.com/ | sh
# sudo usermod -aG docker vagrant
# SCRIPT

$docker_swarm_init_script = <<SCRIPT
echo "Initiating Docker Swarm ..."
docker swarm init --advertise-addr 172.17.149.11 --listen-addr 172.17.149.11:2377
echo "Generating swarm token for worker"
docker swarm join-token --quiet worker > /vagrant/worker_token
echo "Generating swarm token for manager"
docker swarm join-token --quiet manager > /vagrant/manager_token
echo "Deploying Portainer ..."
cd /vagrant
curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml
docker stack deploy --compose-file=portainer-agent-stack.yml portainer
echo "Deploying Docker Registry ..."
docker node update --label-add registry=true manager01
docker stack deploy --compose-file=docker-registry-stack.yml registry
SCRIPT

#   docker service create --name my_nginx --replicas 3 --publish published=8080,target=80 nginx  


BOX_NAME = "hashicorp/bionic64"
BOX_VERSION = "1.0.282"
MEMORY = "1024"
CPUS = 2
MANAGERS = 1
MANAGER_IP = "172.17.149.1"
WORKERS = 2
WORKER_IP = "172.17.148.10"
VAGRANTFILE_API_VERSION = "2"


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    #Common setup
    config.vm.box = BOX_NAME
    config.vm.box_version = BOX_VERSION
    # config.vm.synced_folder ".", "/vagrant", disabled: true    
    config.vm.synced_folder "./data", "/vagrant", 
      create: true #, 
      # smb_host: "192.168.86.113", 
      # smb_username: "aaaaaaa", 
      # smb_password: "xxxxxxx"
    
    # config.vm.provision "shell",inline: $install_docker_script, privileged: true
    config.vm.provision "docker" 
    config.vm.provision :shell, 
                        inline: "sudo cp -v /vagrant/daemon.json /etc/docker \
                                && sudo systemctl daemon-reload \
                                && sudo systemctl restart docker"
    # config.vm.boot_timeout = 600
    # config.vm.provider "hyperv" do |vb|
    config.vm.provider "virtualbox" do |vb|
        vb.gui = true
        vb.memory = MEMORY
        vb.cpus = CPUS
        vb.customize [ "modifyvm", :id, "--paravirtprovider", "hyperv" ]
        # Enable Nifty Hyper-V Features
        # allow nested virtualization within the VM
        # vb.enable_virtualization_extensions = true
        # vb.linked_clone = true
    end
    
    config.vm.provider :hyperv do |hv|
        # hv.vmname = machine_name
        hv.cpus = 1
        hv.memory =  2048
        hv.enable_virtualization_extensions = true
        hv.ip_address_timeout = 240
        hv.vm_integration_services = {
         guest_service_interface: true,
         heartbeat: true,
         key_value_pair_exchange: true,
         shutdown: true,
         time_synchronization: true,
         vss: true
        }
    end


    if Vagrant.has_plugin?("vagrant-timezone")
        config.timezone.value = "America/New_York"
    end

    

    #Setup Manager Nodes
    (1..MANAGERS).each do |i|
        config.vm.define "manager0#{i}" do |manager|
            manager.vm.network :private_network, ip: "#{MANAGER_IP}#{i}"
            manager.vm.hostname = "manager0#{i}"
            if i == 1
                #init docker swarm
                manager.vm.provision "shell",inline: $docker_swarm_init_script

                #Only configure port to host for Manager01
                # manager.vm.network :forwarded_port, guest: 8080, host: 8080
                manager.vm.network :forwarded_port, guest: 5000, host: 5000
                manager.vm.network :forwarded_port, guest: 5080, host: 5080
                manager.vm.network :forwarded_port, guest: 9000, host: 9000
            else
                manager.vm.provision "shell",inline: "docker swarm join --token $(cat /vagrant/manager_token) #{MANAGER_IP}1"  
            end
        end
    end


    #Setup Woker Nodes
    (1..WORKERS).each do |i|
        config.vm.define "worker0#{i}" do |worker|
            worker.vm.network :private_network, ip: "#{WORKER_IP}#{i}"
            worker.vm.hostname = "worker0#{i}"
            worker.vm.provision "shell",inline: "docker swarm join --token $(cat /vagrant/worker_token) #{MANAGER_IP}1"
        end 
    end
    
end